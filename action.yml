name: "Scoop Setup"
description: >-
  Install apps to Windows runner by scoop,
  and update PATH of your workflow.
branding:
  icon: "hard-drive"
  color: "green"
inputs:
  install_scoop:
    description: "Install scoop if true (default)"
    required: true
    default: "true"
  update:
    description: "Call `scoop update` if true (default)"
    required: true
    default: "true"
  checkup:
    description: "Call `scoop checkup` if true"
    required: true
    default: "false"
  update_path:
    description: >-
      "Update PATH environment variable for workflow if true (default)"
    required: true
    default: "true"
  buckets:
    description: "Bucket(s) to add, delimited by whitespace"
    required: false
    default: ""
  admin:
    description: "Install scoop with `-RunAsAdmin`"
    required: false
    default: "true"
  apps:
    description: "Apps to be installed"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: "Setup Scoop"
      shell: pwsh
      run: |
        if('${{ inputs.install_scoop }}' -eq 'true') {
            if('${{ inputs.admin }}' -eq 'true') {
                ${{ env.SCRIPTS_PATH }}\install_scoop.ps1 -RunAsAdmin
            } else {
                ${{ env.SCRIPTS_PATH }}\install_scoop.ps1
            }
            scoop --version
        }
        if('${{ inputs.update_path }}' -eq 'true') {
            Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
        }
        Write-Host 'scoop-setup: inputs.buckets ${{ inputs.buckets }}'
        $param_buckets_string = "${{ inputs.buckets }}"
        if ($param_buckets_string) {
            ${{ env.SCRIPTS_PATH }}\add_buckets.ps1 "$param_buckets_string"
        }
        if('${{ inputs.update }}' -eq 'true') {scoop update}
        if('${{ inputs.checkup }}' -eq 'true') {scoop checkup}
        Write-Host 'scoop-setup: inputs.apps ${{ inputs.apps }}'
        $param_apps_string = "${{ inputs.apps }}"
        if ($param_apps_string) {
            ${{ env.SCRIPTS_PATH }}\install_apps.ps1 "$param_apps_string"
        }
      env:
        SCRIPTS_PATH: ${{ github.action_path }}\scripts
